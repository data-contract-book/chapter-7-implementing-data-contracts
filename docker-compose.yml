services:
  devcontainer:
    image: python:3.12
    volumes:
      - .:/workspace:cached
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
    working_dir: /workspace
    depends_on:
      postgres:
        condition: service_healthy
      etl:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "pgrep", "-f", "sleep infinity"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    command: bash -c "
        apt-get update &&
        apt-get install -y docker.io postgresql-client &&
        pip install -r /workspace/requirements.txt &&
        sleep infinity
      "

  etl:
    image: python:3.12
    volumes:
      - .:/workspace:cached
    networks:
      - app-network
    working_dir: /workspace
    depends_on:
      postgres:
        condition: service_healthy
    command: bash -c "
        pip install -r /workspace/requirements.txt &&
        cd /workspace/data_contract_components/data_assets &&
        alembic upgrade head &&
        python3 seed_db.py
      "
  
  postgres:
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge